# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI с Gradle

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0.41
        ports: ['3300:3306']
        env:
          MYSQL_DATABASE: 'app'
          MYSQL_USER: 'app'
          MYSQL_PASSWORD: 'pass'
        options: >-
          --health-cmd "mysqladmin ping -h localhost -u app -ppass"
          --health-interval 10s

      postgres:
        image: postgres:14-alpine
        ports: ['5432:5432']
        env:
          POSTGRES_DB: 'app'
          POSTGRES_USER: 'app'
          POSTGRES_PASSWORD: 'pass'
        options: >-
          --health-cmd "pg_isready -U app -d app"
          --health-interval 10s

    steps:      
      - uses: actions/checkout@v2
            
      - name: Build and run gate-simulator
        run: |
          docker build -t gate-simulator:1.0 ./gate-simulator
          docker run -d -p 9999:9999 --name gate-simulator gate-simulator:1.0
          sleep 30
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Grant gradlew permissions
        run: chmod +x gradlew
      
      - name: Wait for services
        run: |
          while ! nc -z localhost 3300; do sleep 1; done  # MySQL
          while ! nc -z localhost 5432; do sleep 1; done  # PostgreSQL
          while ! nc -z localhost 9999; do sleep 1; done  # Gate-simulator
          echo "All services are up!"
      
      - name: Run MySQL SUT
        run: java "-Dspring.datasource.url=jdbc:mysql://localhost:3300/app" -jar ./artifacts/aqa-shop.jar &
        
      - name: Run PostgreSQL SUT
        run: java "-Dspring.datasource.url=jdbc:postgresql://localhost:5432/app" -jar ./artifacts/aqa-shop.jar &
        
      - name: Run Gradle tests
        run: ./gradlew test -Dselenide.headless=true --info
